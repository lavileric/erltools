
Ref {2 3 9} DEFINITIONS ::=
BEGIN
    ExtensionField ::= SEQUENCE
    {   
        standard-extension  [0] IMPLICIT ExtensionType ,
        criticality         [1]          Criticality DEFAULT
        {
        },
        value               [2]          ANY DEFINED BY type DEFAULT NULL NULL
    } 
    ExtensionType ::= INTEGER (0..ub-extension-types)
    Criticality ::= BIT STRING {for-submission(0), for-transfer(1)
            , for-delivery(2)} (SIZE(0..ub-bit-options))
    recipient-reassignment-prohibited EXTENSION
                                        RecipientReassignmentProhibited DEFAULT recipient-reassignment-allowed
                                        CRITICAL FOR DELIVERY
    ::= 1
    RecipientReassignmentProhibited ::= ENUMERATED {recipient-reassignment-allowed(0)
            , recipient-reassignment-prohibited(1)} 
    originator-requested-alternate-recipient EXTENSION
                                                OriginatorRequestedAlternateRecipient 
                                                CRITICAL FOR SUBMISSION
    ::= 2
    OriginatorRequestedAlternateRecipient ::= INTEGER 
    dl-expansion EXTENSION
                    DLExpansionProhibited DEFAULT dl-expansion-allowed
                    CRITICAL FOR DELIVERY
    ::= 3
    DLExpansionProhibited ::= ENUMERATED {dl-expansion-allowed(0)
            , dl-expansion-prohibited(1)} 
    ExtensionTest ::= SET
    {   
        name        [0] IA5String ,
        extensions  [3] EXTENSIONS CHOSEN FROM {
                            recipient-reassignment-prohibited,
                            originator-requested-alternate-recipient } 
    } 
    extensionValue ExtensionTest ::= 
    {
        name "NameTest",
        extensions 
        {
            {
                standard-extension recipient-reassignment-prohibited,
                criticality 
                {
                    for-submission
                },
                value RecipientReassignmentProhibited recipient-reassignment-allowed
            },
            {
                standard-extension originator-requested-alternate-recipient,
                criticality 
                {
                    for-transfer
                },
                value OriginatorRequestedAlternateRecipient 8
            }
        }
    }
    extensionValue1 ExtensionTest ::= 
    {
        name "NameTest",
        extensions 
        {
            {
                standard-extension originator-requested-alternate-recipient,
                criticality 
                {
                    for-transfer
                },
                value OriginatorRequestedAlternateRecipient 0
            }
        }
    }
    extensionValue2 ExtensionTest ::= 
    {
        name "NameTest",
        extensions 
        {
            {
                standard-extension repient-rement-prohibited,
                criticality 
                {
                    for-submission
                },
                value DLExpansionProhibited dl-expansion-prohibited
            },
            {
                standard-extension recipient-reassignment-prohibited,
                criticality 
                {
                    for-submission
                },
                value DLExpansionProhibited dl-expansion-prohibited
            },
            {
                standard-extension dl-expansion,
                criticality 
                {
                    for-submission
                },
                value DLExpansionProhibited dl-expansion-prohibited
            },
            {
                standard-extension originator-requested-alternate-recipient,
                criticality 
                {
                    for-transfer
                },
                value OriginatorRequestedAlternateRecipient 8
            }
        }
    }
    ExtensionAttribute ::= SEQUENCE
    {   
        extension-attribute-type    [0] INTEGER ,
        extension-attribute-value   [1] ANY DEFINED BY extension-attribute-type 
    } 
    common-name EXTENSION-ATTRIBUTE CommonName ::= 1
    CommonName ::= PrintableString (SIZE(1..ub-common-name-length))
    Token ::= SEQUENCE
    {   
        token-type-identifier   [0] IMPLICIT OBJECT IDENTIFIER ,
        token                   [1]          ANY DEFINED BY token-type-identifier 
    } 
    asymmetricToken TOKEN INTEGER ::= 
    {
        0,
        1
    }
    TokenData ::= SEQUENCE
    {   
        type    [0] IMPLICIT INTEGER ,
        value   [1]          ANY DEFINED BY type 
    } 
    bind-token-signed-data TOKENDATA BindTokenSignedData ::= 16
    BindTokenSignedData ::= BIT STRING 
    test-simple-1 ExtensionAttribute ::= 
    {
        extension-attribute-type common-name,
        extension-attribute-value CommonName "fff"
    }
    test-simple-10 ExtensionAttribute ::= 
    {
        extension-attribute-type common-name,
        extension-attribute-value INTEGER 5
    }
    test-simple-11 ExtensionAttribute ::= 
    {
        extension-attribute-type toto,
        extension-attribute-value CommonName "fff"
    }
    test-simple-2 Token ::= 
    {
        token-type-identifier asymmetricToken,
        token INTEGER 5
    }
    test-simple-20 Token ::= 
    {
        token-type-identifier asymmetricToken,
        token IA5String "aaa"
    }
    test-simple-21 Token ::= 
    {
        token-type-identifier common-name,
        token INTEGER 6
    }
    test-simple-3 TokenData ::= 
    {
        type bind-token-signed-data,
        value BindTokenSignedData '10'B
    }
    test-simple-30 TokenData ::= 
    {
        type bind-token-signed-data,
        value INTEGER 7
    }
    test-simple-31 TokenData ::= 
    {
        type bindoken-signed-data,
        value BindTokenSignedData '10'B
    }
END



====> Integer value not found
ub-common-name-length
In
INTEGER




====> Integer value not found
ub-bit-options
In
INTEGER




====> Integer value not found
ub-extension-types
In
INTEGER


asymmetricToken TOKEN INTEGER ::= 
{
    0,
    1
}
06 01 01
bind-token-signed-data TOKENDATA BindTokenSignedData ::= 16
02 01 10
common-name EXTENSION-ATTRIBUTE CommonName ::= 1
02 01 01
dl-expansion EXTENSION
                DLExpansionProhibited DEFAULT dl-expansion-allowed
                CRITICAL FOR DELIVERY
::= 3
02 01 03
extensionValue ExtensionTest ::= 
31 30
{
    name "NameTest"
    A00A16 08 4E 61 6D 65 54 65 73 74,
    extensions 
    A32231 20
    {
        30 0E
        {
            standard-extension recipient-reassignment-prohibited
            80 01 01,
            criticality 
            {
                for-submission
            }
            A10403 02 05 80,
            value RecipientReassignmentProhibited recipient-reassignment-allowed
            A2030A 01 00
        },
        30 0E
        {
            standard-extension originator-requested-alternate-recipient
            80 01 02,
            criticality 
            {
                for-transfer
            }
            A10403 02 05 40,
            value OriginatorRequestedAlternateRecipient 8
            A20302 01 08
        }
    }
}
extensionValue1 ExtensionTest ::= 
31 20
{
    name "NameTest"
    A00A16 08 4E 61 6D 65 54 65 73 74,
    extensions 
    A31231 10
    {
        30 0E
        {
            standard-extension originator-requested-alternate-recipient
            80 01 02,
            criticality 
            {
                for-transfer
            }
            A10403 02 05 40,
            value OriginatorRequestedAlternateRecipient 0
            A20302 01 00
        }
    }
}



====> Extension is not allowed
{
    standard-extension repient-rement-prohibited,
    criticality 
    {
        for-submission
    },
    value DLExpansionProhibited dl-expansion-prohibited
}

In
EXTENSIONS CHOSEN FROM {
    recipient-reassignment-prohibited,
    originator-requested-alternate-recipient }




====> This extension should not have a value of this type
{
    standard-extension recipient-reassignment-prohibited,
    criticality 
    {
        for-submission
    },
    value DLExpansionProhibited dl-expansion-prohibited
}
Type should be
RecipientReassignmentProhibited




====> Extension is not allowed
{
    standard-extension dl-expansion,
    criticality 
    {
        for-submission
    },
    value DLExpansionProhibited dl-expansion-prohibited
}

In
EXTENSIONS CHOSEN FROM {
    recipient-reassignment-prohibited,
    originator-requested-alternate-recipient }




====> Integer value not found
repient-rement-prohibited
In
INTEGER

extensionValue2 ExtensionTest ::= 
31 4F
{
    name "NameTest"
    A00A16 08 4E 61 6D 65 54 65 73 74,
    extensions 
    A34131 3F
    {
        30 0D
        {
            standard-extension repient-rement-prohibited
            80 00 ,
            criticality 
            {
                for-submission
            }
            A10403 02 05 80,
            value DLExpansionProhibited dl-expansion-prohibited
            A2030A 01 01
        },
        30 0E
        {
            standard-extension recipient-reassignment-prohibited
            80 01 01,
            criticality 
            {
                for-submission
            }
            A10403 02 05 80,
            value DLExpansionProhibited dl-expansion-prohibited
            A2030A 01 01
        },
        30 0E
        {
            standard-extension dl-expansion
            80 01 03,
            criticality 
            {
                for-submission
            }
            A10403 02 05 80,
            value DLExpansionProhibited dl-expansion-prohibited
            A2030A 01 01
        },
        30 0E
        {
            standard-extension originator-requested-alternate-recipient
            80 01 02,
            criticality 
            {
                for-transfer
            }
            A10403 02 05 40,
            value OriginatorRequestedAlternateRecipient 8
            A20302 01 08
        }
    }
}
originator-requested-alternate-recipient EXTENSION
                                            OriginatorRequestedAlternateRecipient 
                                            CRITICAL FOR SUBMISSION
::= 2
02 01 02
recipient-reassignment-prohibited EXTENSION
                                    RecipientReassignmentProhibited DEFAULT recipient-reassignment-allowed
                                    CRITICAL FOR DELIVERY
::= 1
02 01 01
test-simple-1 ExtensionAttribute ::= 
30 0C
{
    extension-attribute-type common-name
    A00302 01 01,
    extension-attribute-value CommonName "fff"
    A10513 03 66 66 66
}



====> The type of the value is not correct
INTEGER
Type should be
CommonName
In
test-simple-10 ExtensionAttribute ::= 
{
    extension-attribute-type common-name,
    extension-attribute-value INTEGER 5
}

test-simple-10 ExtensionAttribute ::= 
30 0A
{
    extension-attribute-type common-name
    A00302 01 01,
    extension-attribute-value INTEGER 5
    A10302 01 05
}



====> Value of selector cannot be found
toto
In
test-simple-11 ExtensionAttribute ::= 
{
    extension-attribute-type toto,
    extension-attribute-value CommonName "fff"
}




====> Integer value not found
toto
In
INTEGER

test-simple-11 ExtensionAttribute ::= 
30 0B
{
    extension-attribute-type toto
    A00202 00 ,
    extension-attribute-value CommonName "fff"
    A10513 03 66 66 66
}
test-simple-2 Token ::= 
30 08
{
    token-type-identifier asymmetricToken
    80 01 01,
    token INTEGER 5
    A10302 01 05
}



====> The type of the value is not correct
IA5String
Type should be
INTEGER
In
test-simple-20 Token ::= 
{
    token-type-identifier asymmetricToken,
    token IA5String "aaa"
}

test-simple-20 Token ::= 
30 0A
{
    token-type-identifier asymmetricToken
    80 01 01,
    token IA5String "aaa"
    A10516 03 61 61 61
}



====> Type of selector is incorrect
common-name
In
test-simple-21 Token ::= 
{
    token-type-identifier common-name,
    token INTEGER 6
}




====> Not a correct object identifier value

1

test-simple-21 Token ::= 
30 06
{
    token-type-identifier common-name
    80 ,
    token INTEGER 6
    A10302 01 06
}
test-simple-3 TokenData ::= 
30 09
{
    type bind-token-signed-data
    80 01 10,
    value BindTokenSignedData '10'B
    A10403 02 06 80
}



====> The type of the value is not correct
INTEGER
Type should be
BindTokenSignedData
In
test-simple-30 TokenData ::= 
{
    type bind-token-signed-data,
    value INTEGER 7
}

test-simple-30 TokenData ::= 
30 08
{
    type bind-token-signed-data
    80 01 10,
    value INTEGER 7
    A10302 01 07
}



====> Value of selector cannot be found
bindoken-signed-data
In
test-simple-31 TokenData ::= 
{
    type bindoken-signed-data,
    value BindTokenSignedData '10'B
}




====> Integer value not found
bindoken-signed-data
In
INTEGER

test-simple-31 TokenData ::= 
30 08
{
    type bindoken-signed-data
    80 00 ,
    value BindTokenSignedData '10'B
    A10403 02 06 80
}


